/* link to project
/Users/karenplimmer/Documents/Projects/Colmar_Academy

fonts in use
font-family: "Belleza", sans-serif;
font-family: "Lora", serif;
font-family: 'Montserrat', sans-serif;
*/

/* Reset default browser */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    border: 1px solid pink;
}

html {
    font-size: 14px;
}

/*Main Content Margins*/

@media only screen and (min-width: 1400px) {
    body {
        margin :0 20%;
    }  
}

@media only screen and (min-width: 1200px) and (max-width:1400px) {
    body {
        margin :0 15%;
    }
}

@media only screen and (min-width: 998px) and (max-width:1200px) {
    body {
        margin :0 5%;
    }
}

@media only screen and (min-width: 768px) and (max-width:998px) {
    body {
        margin :0 2%;
    }
}

@media only screen and (min-width :460px)  and (max-width: 768px) {
    body {
        margin: 0 1%;
    }
}

@media only screen and (max-width: 460px) {
    body {
        margin: 0;
    }
}

/* Universal Styles */

body {
    font-family: "Montserrat", Helvetica, sans-serif;
    font-size: 14px;
    color: rgb(75,75,75);
}

h1, h2, h3, h4 {
    font-family: "Belleza", "Lora", sans-serif;
}

h1, h2, h3 {
    color: rgb(0, 0, 75);
}

h1 {
    font-size: 2.5rem;
}

h2 {
    font-size: 2rem;
}

h3 {
    font-size : 1.5rem;
}

h4 {
    font-size: 1rem;
    text-transform: uppercase;
    color: rgb(0, 0, 75);
}

p {
    line-height: 1.3;
}

/*Nav and Links */

a {
    color: rgb(0, 165,175);
    text-decoration: none;     
}

a:hover {
    color: rgb(0, 205, 215);
}

a:visited {
    color: rgb(0, 65, 75);
}

nav li {
    list-style: none;
    display: inline;
}

/*Flex-containers*/

.flex {
    display: flex;
    padding: 0;
}

.flex-wrap {
  display: flex;
  flex-wrap: wrap;
  padding: 0;
}

/*header*/

.desktop-menu, .mobile-menu {
    padding: 0 24px ;
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 64px;
    width: 100%;
}

.logo, .desktop-menu nav {
    height: 64px;
    line-height: 64px;
}

.logo img {
    height: 32px;
    transform:translate(0, 10px);
}
 .logo h2  {
    text-transform: uppercase;
    font-size: 1.5rem;
    color:rgb(150, 150, 150);
    letter-spacing: 0.15em;
    display: inline;
}

 .logo span {
    font-weight: bold;
    color:rgb(50, 50, 50)
}

.desktop-menu nav li {
    padding-left: 16px;
   
}

.desktop-menu nav li a {
    color:rgb(125, 125, 125);  
}

.icon {
    height: 2rem;
}

/*Header Media Queries*/

@media only screen and (max-width: 900px) {
    .desktop-menu {
        display: none;
    }
}

@media only screen and (min-width: 900px) {
    .mobile-menu {
        display: none;
    }
}

/* Main Content*/

/*Learn something new everyday
2 flex-boxes 1.learn 2.study
The image is  directly in the flex-container.
The 3 text items are in a div in the flex-container.
The link required it's own div. Maybe I could have selected display:block
 and used margin for outer padding.
*/

.learn-and-study {
    background-color: rgb(230, 230, 230);
    align-items: center;
}

.flex-item-1-of-2 {
    width: 60%;
    padding: 32px 24px;
}

.flex-item-1-of-2 img, h2, h3, p, span, video {
    width: 100%;
}

.flex-item-2-of-2 {
   width: 40%;
   padding: 32px 24px;
}

.flex-item-2-of-2 h1, h2, h3, p, span, button {
    width: 100%;
}

.flex-item-2-of-2 h1  {
    padding-top: 0;
    padding-bottom: 32px;
}

.flex-item-2-of-2 button {
    padding-top: 32px;
    padding-bottom: 32px;
    background-color:rgb(230, 230, 230)
}

button a {
    padding: 8px 70px;
    text-align: center;
    color: white;
    background-color:rgb(0, 65, 75);
    font-size: 1.3rem;
}

button a:hover {
    background-color:rgb(0, 95, 105);
}

@media only screen and (max-width: 2000px) {
    .learn-and-study, .practicing-and-orientation, .thesis-exhibit {
        justify-content: center;
    }

     .flex-item-1-of-2 {
        width: 100%
    }
    .flex-item-2-of-2 {
        width: 60%
    }

    .flex-item-2-of-2 h1, h3, a {
        width: 100%;
        text-align: center;
    }
}

@media only screen and (max-width: 1200px) {
    .flex-item-1-of-2 {
        padding: 0;
    }
}


/*It doesn't hurt to keep practicing
2 flex-boxes 1.practicing 2.orientation
Each of the 3 blocks in orientation also are flex-boxes because for desktop 
I wanted the image and text to display inline but for mobile as a block. 
Perhaps I could have chosen display:inline and for mobile display:block.
I also wanted the desktop text centred vertically. Perhaps if I specified height
vertical-align middle: might work? A. No, only if set as a table-cell.
*/

.practicing h2 {
    padding: 32px 0 24px 0;
}

.practicing span {
    display: block;
    font-family: Belleza;
    font-style : italic;
    font-size: 1.1rem;
    color:rgb(0, 0, 75);
    padding-top: 24px;
}

.info {
    padding-top: 16px;
    align-items: center;
}

 .info:first-child {
     padding-top: 0;
 } 

.info:last-child {
    padding-bottom: 16px;
    background-color:rgb(230, 230, 230);
}

.info .small-img {
    width: 35%;
    height: auto;
}

.mobile-indent  {
    width: 65%;
    padding-left: 16px;
}

.mobile-indent h3 {
    text-align: left;
}

.mobile-indent p {
    padding: 8px 0 8px 0;
}

@media only screen and (max-width: 740px) {
    .practicing {
        display: none
    }

    .orientation {
        width: 100%;
        padding: 16px 16px 32px 16px;
    }

    .info {
      justify-content: flex-start;
      align-content: flex-start;
      flex-wrap: wrap;
      width: 100%;
    }

    .mobile-indent, .info img  {
        width: 100%
    }

    .mobile-indent a{
       padding-bottom: 48px;
        width: 100%;
        display: block;
        text-align: left;
    }

    .info img {
        padding-bottom: 16px;
    }

    .info:last-child {
        background-color: white;
        padding-bottom: 0;
    }

    .info:last-child a {
        padding-bottom: 0;
    }

    .small-img {
        display: none;
    }
}

@media only screen and (min-width: 740px) {
    .mobile-img {
        display: none;
    }
} 

/*Start learning
One flex container (container-of-six) containing 6 flex-items. 
Six smaller boxes contained an image and a text box as block elements.
( a text box was chosen as all lines of text but not the image required indentation) 
The heading did not need to be contained in a div for styling but 
height/line-height was used for vertical alignment.
*/

.desktop-courses {    
    background-color: rgb(230, 230, 230);
}

.desktop-courses h2 {
    text-align: center;
    padding: 32px 0;
    background-color: rgb(230, 230, 230);
}

.container-of-six {
    justify-content: center;
    width: 100%;
    padding:  0 72px 0 40px;
    background-color: rgb(230, 230, 230);
}

@media only screen and (max-width: 800px) {
    .container-of-six {
        padding: 0;
    }
}

.small-container {
    width: 30%;
    padding: 0 0 24px 0;
    background-color: white;
    margin: 0 0 32px 32px;
}

.small-container img {
    display: block;
    width: 100%;
    height: auto;
}

.small-container  p {
    color: rgb(150, 150, 150);
    padding: 0 0 0 16px;
}

.small-container h3 a {
    display: block;
    text-align: left;
    padding: 16px 0 0 16px;
}

.small-container h4 {
    padding: 8px 0 8px 16px;
}

/*Start Learning Media Queries
No flex-containers on mobile. Able to vertiically align text in boxes 
with padding and no horizontal centering required.
*/

@media only screen and (min-width: 550px) {
    .mobile-courses {
        display: none;
    }
}

@media only screen and (max-width: 550px) {
    .desktop-courses {
        display: none;
    }

   .mobile-courses h2 {
        text-align: center;
        padding: 32px 0 16px 0;
    }

    .mobile-courses h3 a {
        width: 100%;
        background-color :rgb(230, 230, 230);
        padding: 16px 16px 24px 16px;
        display: block;
        margin: 0 auto 8px auto;
        color:rgb(0, 165, 175);
    }

.mobile-courses h3 a:hover {
       color: rgb(0, 205, 215);
    }
} 
    

/*Thesis exhibit
A flex-container .thesis contains 1 .video  and  2.thesis-content.
The video box contains the video and 2 text blocks
*/

.desktop-video h2 { 
    text-align: center;
    padding: 32px 0 0 0;
} 

video {
    width: 100%;
    height: auto;
}

.video h3 {
    padding: 24px 0 8px 0;
}

.fisma, .ny {
    align-items: center;
}

.fisma { 
    background-color: rgb(230, 230, 230);
}

.fisma img, .ny img  {
    padding: 16px;
    width: 35%;
    height: auto;
}

.fisma div, .ny div {
    width: 65%;
}

.fisma div h3, .ny div  h3 {
    text-align: left;
    padding-bottom: 8px;
}

/*Thesis exhibit media queries
Centered video horizontally by displaying as block 
and using margin: auto
*/

@media only screen and (max-width: 700px) {
    .desktop-video {
        display: none;
    }

  .video-section-mobile video {
        padding: 16px 0 24px 0;
    }

.video-section-mobile h2 {
    text-align: center;
    padding: 24px 0 16px 0;
}
}

@media only screen and (min-width: 700px) {
    .video-section-mobile {
        display: none;
    }
}

/*footer*/

footer {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
}

footer span {
    width: 70%;
    font-size: 0.9rem;
}

footer nav {
    width: 30%;
    padding: 0 16px 0 0;
}

footer nav li {
    float: right;
    padding: 0 0 0 16px;
}

footer nav  li a {
    display: inline;
    text-align: right;
    font-size: 0.9rem;
}

@media only screen and (max-width: 550px) {
    footer nav {
        display: none;
    }
}

