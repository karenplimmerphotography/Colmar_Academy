/* link to project
/Users/karenplimmer/Documents/Projects/Colmar_Academy

fonts in use
font-family: "Belleza", sans-serif;
font-family: "Lora", serif;
font-family: 'Montserrat', sans-serif;
*/

/* Reset default browser */

* {
    margin: 0;
    padding: 0;
    border: 1px none pink;
}

html {
    font-size: 14px;
}

body, .main-content {
    padding:0;
    margin :0;
}

/* Universal Styles */

body {
    font-family: "Montserrat", Helvetica, sans-serif;
    font-size: 14px;
    color: rgb(75,75,75);
}

h1, h2, h3, h4 {
    font-family: "Belleza", "Lora", sans-serif;

}

h1, h2, h3 {
    color: rgb(0, 0, 75);
}

h1 {
    font-size: 2.5rem;
}

h2 {
    font-size: 2rem;
}

h3 {
    font-size : 1.5rem;
}

h4 {
    font-size: 1rem;
    text-transform: uppercase;
    color: rgb(0, 0, 75);
}

p {
    line-height: 1.3;
}

a {
    color: rgb(0, 165,175);
    text-decoration: none;     
}

a:hover {
    color: rgb(0, 205, 215);
}

a:visited {
    color: rgb(0, 65, 75);
}

nav li {
    list-style: none;
    display: inline;
}

.flex-container-ccw {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  padding: 0;
}

.flex-container-csw {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    flex-wrap: wrap;
    padding: 0;
}

.flex-container-cs {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    padding: 0;
}

.flex-container-sc {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    padding: 0;
}

/*header*/

header {
    height: 64px;
    padding: 0 0 0 24px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.logo img {
    height: 32px;
    transform:translate(0, -3px);
}

 .name  {
    text-transform: uppercase;
    display: inline;
    font-size: 1.5rem;
    vertical-align: top;
    color:rgb(150, 150, 150);
    letter-spacing: 0.15em;
}

 .colmar {
    font-weight: bold;
    color:rgb(50, 50, 50)
}

nav li {
    padding-left: 16px;
}

li a {
    color:rgb(125, 125, 125);
}

/*Header Media Queries*/

@media only screen and (max-width: 800px) {
    .desktop-menu {
        display: none;
    }
}

@media only screen and (min-width: 800px) {
    .mobile-menu {
        display: none;
    }
}

/*Header Mobile*/

nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 24px;
    height: 64px;
}

.icon {
    height: 2rem;
}

/*Learn something new everyday
2 flex-boxes 1.learn 2.study
The image is  directly in the flex-container.
The 3 text items are in a div in the flex-container.
The link required it's own div. Maybe I could have selected display:block
 and used margin for outer padding.
*/

.learn-and-study {
    background-color: rgb(230, 230, 230);
}

.study  {
    padding: 32px 24px;
    width: 739px
}

.learn {
   width: 461px;
   border-bottom: 1px solid rgb(0, 165, 175);
   border-top: 1px solid rgb(0, 165, 175);
   margin-bottom: 24px;
}

.learn h1 {
    padding: 32px 0;
}

.start-here-container {
    padding: 32px 0 48px 0;
}

.learn a {
    padding: 8px 70px;
    text-align: center;
    color: white;
    background-color:rgb(0, 65, 75);
    font-size: 1.3rem;
}

/*It doesn't hurt to keep practicing
2 flex-boxes 1.practicing 2.orientation
Each of the 3 blocks in orientation also are flex-boxes because for desktop 
I wanted the image and text to display inline but for mobile as a block. 
Perhaps I could have chosen display:inline and for mobile display:block.
I also wanted the desktop text centred vertically. Perhaps if I specified height
vertical-align middle: might work? A. No, only if set as a table-cell.
*/

.practicing {
    padding: 32px 24px 0 24px;
    width: 739px
}

.orientation {
    width: 461px;
    padding: 16px 0 32px 0;
}

.practicing img {
    width: 739px;
}

.practicing h2 {
    padding: 32px 0 24px 0;
}

.practicing span {
    display: block;
    font-family: Belleza;
    font-style : italic;
    font-size: 1.1rem;
    color:rgb(0, 0, 75);
    padding: 24px 0 32px 0;
}

.mobile-indent p {
    padding: 16px 0;
}

.small-img {
    height: 150px;
    padding: 16px;
}

.beret {
    background-color:rgb(240, 240, 240);
}

@media only screen and (max-width: 740px) {
    .practicing {
        display: none
    }

    .orientation {
        padding: 0;
    }

    .info {
      padding: 0;
      width: 460px;
      flex: display;
      justify-content: flex-start;
      align-items: flex-start;
      flex-wrap: wrap;
    }

    .mobile-img {
      width: 460px;
      padding : 16px 0;
    }

    .mobile-indent {
        padding: 0 16px;
    }

    .beret {
        background-color: white;
        padding-top: 48px;
        padding-bottom: 64px;
    }

    .students { 
        padding-top: 48px;
    }

    .small-img {
        display: none;
    }
}

@media only screen and (min-width: 740px) {
    .mobile-img {
        display: none;
    }
} 

/*Start learning
One flex container (container-of-six) containing 6 flex-items. 
Six smaller boxes contained an image and a text box as block elements.
( a text box was chosen as all lines of text but not the image required indentation) 
The heading did not need to be contained in a div for styling but 
height/line-height was used for vertical alignment.
*/

.desktop-courses {    
    background-color: rgb(230, 230, 230);
}

.start-learning-heading {
    text-align: center;
    height: 92px;
    line-height: 92px;
    background-color: rgb(230, 230, 230);
}

.container-of-six {
    max-width: 1300px;
    margin :0 auto;
    background-color: rgb(230, 230, 230);
}

.small-container {
    width: 313px;
    height: 313px;
    padding: 0;
    background-color: white;
    margin: 0 0 32px 32px;
}

.small-container img {
    display: block;
    width: 313px;
    height: auto;
}

.small-container  p {
    color: rgb(150, 150, 150)
}

.text-indent {
    padding: 0 0 0 16px;
}

.text-indent h3 {
    height: 53px;
    line-height: 61px;
    padding-bottom: 0;
}

.text-indent h4 {
    padding: 8px 0;
}

.text-indent p {
    padding-bottom: 24px;
}

/*Start Learning Media Queries
No flex-containers on mobile. Able to vertiically align text in boxes 
with padding and no horizontal centering required.
*/

@media only screen and (min-width: 550px) {
    .mobile-courses {
        display: none;
    }
}

@media only screen and (max-width: 550px) {
    .desktop-courses {
        display: none;
    }

   .start-learning-heading-mobile {
        text-align: center;
        background-color:white;
        padding-bottom: 24px;
    }

    .shaded {
        max-width: 460px;
        background-color :rgb(230, 230, 230);
        padding: 16px 0 24px 16px;
        display: block;
        margin: 0 auto 8px auto;
   }

   .shaded:last-child {
        margin-bottom:56px;
   }

   .shaded a {
        color:rgb(0, 0, 75);
   }

   .shaded a:hover {
       color:rgb(0, 205, 215);
    }
} 
    

/*Thesis exhibit
A flex-container .thesis contains 1 .video  and  2.thesis-content.
The video box contains the video and 2 text blocks
*/

.thesis-h2 { 
    text-align: center;
    height: 92px;
    line-height: 92px;
} 

.thesis {
    padding: 0 32px 48px 24px;
}

.video {
    padding-bottom: 16px;
}

video {
    width: 691px;
    padding: 0 24px 24px 0;
}

 .video  p {
    padding-top: 8px;
    padding-bottom: 32px;
    width: 691px;
}

.fisma, .ny {
    width: 500px;
}

.fisma { 
    background-color: rgb(230, 230, 230);
}

.fisma img, .ny img  {
    padding: 16px;
    height: 150px;
}

/*Thesis exhibit media queries
Centered video horizontally by displaying as block 
and using margin: auto
*/

@media only screen and (max-width: 700px) {
    .desktop-video {
        display: none;
    }
    .mobile-video {
        padding-left: 16px;
    }

    video {
        display: block;
        width: 460px;
        height: auto;
        margin: 0 auto 32px auto;
    }

    .thesis-mobile-h2 {
        padding: 16px 0 24px 0;
        text-align: center;
    }
}

@media only screen and (min-width: 700px) {
    .video-section-mobile {
        display: none;
    }
}

/*footer*/

footer {
    display: inline;
    font-size: 0.9rem;
    padding: 0 24px 64px 24px;
}

footer nav {
    display: inline;
    float: right;
}
